name: Build
on: [push]
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Environment
        run: |
          export FLASK_APP=app.py
          echo "Setup complete"

  python-format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install Black
        run: pip install black
      - name: Run Black
        run: black . --line-length 79 --exclude "Blueprint/__init__.py"
      - name: Commit changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Apply automatic formatting changes" && git push)

  build-tailwind:
    needs: python-format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - name: Install npm dependencies
        run: npm install
      - name: Build Tailwind CSS
        run: npm run build:css

  build-database:
    needs: build-tailwind
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Build Database
        run: |
          flask drop_all
          flask create_all

  unit-testing:
    needs: build-database
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Run tests
        working-directory: ./unit_tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/..
          pytest app_test.py
          pytest geminiapi_test.py
          pytest openopusapi_test.py
          pytest weatherapi_test.py
          pytest database_test.py
          pytest email_test.py
          pytest twitter_test.py
          pytest youtube_test.py

  deploy-to-impaas:
    needs: unit-testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ImPaaS-Deploy
        uses: /impaas/impaas-deploy@v3
        with:
          app-name: mystro
          deployment-token: ${{ secrets.IMPAAS_DEPLOY_TOKEN }}
          method: PLATFORM